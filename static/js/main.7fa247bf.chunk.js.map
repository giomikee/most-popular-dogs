{"version":3,"sources":["components/Header.js","actions/index.js","components/DogBreedsAPI.js","actions/types.js","App.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["Header","className","ALL_BREEDS","sortDescending","firstDog","secondDog","numImages","DogBreedsAPI","this","props","fetchDogBreeds","then","dogs","breedsFetches","forEach","dog","push","fetchDogBreedImages","breed","Promise","all","getTopDogs","error","topDogs","message","length","width","height","chartType","loader","data","map","options","title","is3D","backgroundColor","Component","connect","state","dispatch","fetch","res","json","type","payload","Object","keys","catch","dogBreed","images","compareFunc","sort","slice","areTopDogsCalculated","App","Boolean","window","location","hostname","match","initialState","middleware","thunk","store","createStore","action","dogBreedIndex","findIndex","isLastBreedLoaded","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.7fa247bf.chunk.js","sourcesContent":["/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport '../css/Header.css';\n\nexport default function Header() {\n\treturn (\n\t\t<header>\n\t\t\t<h1>\n            Most Popular Dog Breeds\n\t\t\t</h1>\n\t\t\t<h2 className='subtitle'>\n                (based on number of stored images)\n\t\t\t</h2>\n\t\t</header>\n\t);\n}\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport { FETCH_DOG_BREEDS, FETCH_DOG_BREED_IMAGES, FETCH_ERROR, GET_TOP_DOGS } from './types';\n\n/* eslint-disable no-magic-numbers */\n\nconst API_PREFIX = 'https://dog.ceo/api/breed';\nconst ALL_BREEDS = `${API_PREFIX}s/list/all`;\n\nexport const fetchDogBreeds = () => dispatch =>\n\tfetch(ALL_BREEDS)\n\t\t.then(res => res.json())\n\t\t.then(dogs => dispatch({\n\t\t\ttype: FETCH_DOG_BREEDS,\n\t\t\tpayload: Object.keys(dogs.message)\n\t\t}))\n\t\t.catch(error => dispatch({\n\t\t\ttype: FETCH_ERROR,\n\t\t\tpayload: error\n\t\t}));\n\nexport const fetchDogBreedImages = dogBreed => dispatch =>\n\tfetch(`${API_PREFIX}/${dogBreed}/images`)\n\t\t.then(res => res.json())\n\t\t.then(images => dispatch({\n\t\t\ttype: FETCH_DOG_BREED_IMAGES,\n\t\t\tbreed: dogBreed,\n\t\t\tpayload: images.message.length\n\t\t}))\n\t\t.catch(error => dispatch({\n\t\t\ttype: FETCH_ERROR,\n\t\t\tpayload: error\n\t\t}));\n\nexport const getTopDogs = (dogs, compareFunc) => dispatch => {\n\tconst topDogs = [...dogs].sort(compareFunc).slice(0, 10);\n\n\tdispatch({\n\t\ttype: GET_TOP_DOGS,\n\t\tpayload: topDogs,\n\t\tareTopDogsCalculated: true\n\t});\n};\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDogBreeds, fetchDogBreedImages, getTopDogs } from '../actions';\nimport { Chart } from 'react-google-charts';\nimport '../css/DogBreedsAPI.css';\n\n/* eslint-disable no-magic-numbers */\nconst sortDescending = (firstDog, secondDog) => {\n\tif (firstDog.numImages > secondDog.numImages) {\n\t\treturn -1;\n\t} else if (firstDog.numImages < secondDog.numImages) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n};\n\nclass DogBreedsAPI extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchDogBreeds().then(() => {\n\t\t\tconst { dogs } = this.props;\n\t\t\tconst breedsFetches = [];\n\n\t\t\tdogs.forEach(\n\t\t\t\tdog => breedsFetches.push(this.props.fetchDogBreedImages(dog.breed))\n\t\t\t);\n\n\t\t\tPromise.all(breedsFetches).then(() => this.props.getTopDogs(dogs, sortDescending));\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { error, topDogs } = this.props;\n\n\t\tif (error) {\n\t\t\treturn <div>{error.message}</div>;\n\t\t} else if (topDogs.length === 0) {\n\t\t\treturn <div>Loading chart...</div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<Chart\n\t\t\t\tclassName='pie-chart'\n\t\t\t\twidth={'100%'}\n\t\t\t\theight={'600px'}\n\t\t\t\tchartType='PieChart'\n\t\t\t\tloader={<div>Loading Chart</div>}\n\t\t\t\tdata={[\n\t\t\t\t\t['Breed', 'Images'],\n\t\t\t\t\t...topDogs.map(\n\t\t\t\t\t\tdog => [dog.breed, dog.numImages]\n\t\t\t\t\t)\n\t\t\t\t]}\n\t\t\t\toptions={{\n\t\t\t\t\ttitle: 'Popular Dog Breeds',\n\t\t\t\t\tis3D: true,\n\t\t\t\t\tbackgroundColor: '#6B849A'\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\t...state\n});\n\nexport default connect(mapStateToProps, { fetchDogBreeds, fetchDogBreedImages, getTopDogs })(DogBreedsAPI);\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nexport const FETCH_DOG_BREEDS = 'FETCH_DOG_BREEDS';\nexport const FETCH_DOG_BREED_IMAGES = 'FETCH_DOG_BREED_IMAGES';\nexport const FETCH_ERROR = 'FETCH_ERROR';\nexport const GET_TOP_DOGS = 'GET_TOP_DOGS';\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\nimport React from 'react';\nimport './css/App.css';\nimport Header from './components/Header';\nimport DogBreedsAPI from './components/DogBreedsAPI';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<DogBreedsAPI />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport { FETCH_DOG_BREEDS, FETCH_DOG_BREED_IMAGES, FETCH_ERROR, GET_TOP_DOGS } from '../actions/types';\n\nconst initialState = {\n\tdogs: [],\n\ttopDogs: [],\n\terror: null\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_DOG_BREEDS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdogs: action.payload.map(breed => ({\n\t\t\t\t\tbreed,\n\t\t\t\t\tnumImages: 0\n\t\t\t\t}))\n\t\t\t};\n\t\tcase FETCH_DOG_BREED_IMAGES:\n\t\t\tconst dogBreedIndex = state.dogs.findIndex(dog => dog.breed === action.breed);\n\n\t\t\tstate.dogs[dogBreedIndex].numImages = action.payload;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLastBreedLoaded: action.isLastBreedLoaded\n\t\t\t};\n\t\tcase FETCH_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tcase GET_TOP_DOGS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttopDogs: action.payload,\n\t\t\t\tareTopDogsCalculated: action.areTopDogsCalculated\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\n\nconst middleware = [thunk];\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(\n\t\tapplyMiddleware(...middleware)\n\t)\n);\n\nexport default store;\n","/*\n * Created on Sun Mar 08 2020\n * Author: Gio Justiniano\n * More info: https://github.com/giomikee/\n *\n * Copyright (c) 2020\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}